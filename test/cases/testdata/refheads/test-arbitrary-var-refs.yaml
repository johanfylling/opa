cases:
- note: 'refheads/arbitrary-var, single'
  env:
    OPA_ENABLE_GENERAL_RULE_REFS: "true"
  modules:
  - |
    package test

    p[q].r := i { q := ["a", "b", "c"][i] }
  query: data.test.p = x
  want_result:
  - x:
      a:
        r: 0
      b:
        r: 1
      c:
        r: 2
- note: 'refheads/arbitrary-var, multiple'
  env:
    OPA_ENABLE_GENERAL_RULE_REFS: "true"
  modules:
    - |
      package test
      
      p[q][r] { q := ["a", "b", "c"][r] }
  query: data.test.p = x
  want_result:
  - x:
      a:
        0: true
      b:
        1: true
      c:
        2: true
# FIXME: Below test case returns: rego_type_error: undefined ref: data.test.p.b
#- note: 'refheads/arbitrary-var, deep query'
#  env:
#    OPA_ENABLE_GENERAL_RULE_REFS: "true"
#  modules:
#    - |
#      package test
#
#      p[q][r] { q := ["a", "b", "c"][r] }
#  query: data.test.p.b = x
#  want_result:
#    - x:
#        1: true
- note: 'refheads/arbitrary-var, overlapping rule, no conflict'
  env:
    OPA_ENABLE_GENERAL_RULE_REFS: "true"
  modules:
    - |
      package test
      
      p[q].r := i { q := ["a", "b", "c"][i] }
      p.a.r := 0
  query: data.test.p = x
  want_result:
    - x:
        a:
          r: 0
        b:
          r: 1
        c:
          r: 2
- note: 'refheads/arbitrary-var, overlapping rule, conflict'
  env:
    OPA_ENABLE_GENERAL_RULE_REFS: "true"
  modules:
    - |
      package test
      
      p[q].r := i { q := ["a", "b", "c"][i] }
      p.a.r := 42
  query: data.test.p = x
  want_error: eval_conflict_error
# FIXME: We can't do complex queries in these tests?
#- note: 'refheads/arbitrary-var, multiple result-set entries'
#  env:
#    OPA_ENABLE_GENERAL_RULE_REFS: "true"
#  modules:
#    - |
#      package test
#
#      p.q[r].s := 1 { r := "foo" }
#      p.q[r].s := 2 { r := "bar" }
#  query: i := ["foo", "bar"][_]; data.test.p.q[i].s = x
#  want_result:
#    - x: 1
#    - x: 2